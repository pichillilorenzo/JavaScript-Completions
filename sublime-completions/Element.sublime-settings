{
	"scope": "source.js",
	"completions": [
		[
			"getElementsByTagNameNS( namespace: DOMString, localName: DOMString ): HTMLCollection\tElement",
			"getElementsByTagNameNS(${1:namespace: DOMString}, ${2:localName: DOMString})"
		],
		[
			"setAttributeNS( namespace: DOMString, name: DOMString, value: DOMString ): void\tElement",
			"setAttributeNS(${1:namespace: DOMString}, ${2:name: DOMString}, ${3:value: DOMString})"
		],
		[
			"getAttributeNS( namespace: DOMString, localName: DOMString ): DOMString\tElement",
			"getAttributeNS(${1:namespace: DOMString}, ${2:localName: DOMString})"
		],
		[
			"removeAttributeNS( namespace: DOMString, localName: DOMString ): void\tElement",
			"removeAttributeNS(${1:namespace: DOMString}, ${2:localName: DOMString})"
		],
		[
			"hasAttributeNS( namespace: DOMString, localName: DOMString ): boolean\tElement",
			"hasAttributeNS(${1:namespace: DOMString}, ${2:localName: DOMString})"
		],
		[
			"getElementsByClassName( classNames: DOMString ): HTMLCollection\tElement",
			"getElementsByClassName(${1:classNames: DOMString})"
		],
		[
			"getElementsByTagName( localName: DOMString ): HTMLCollection\tElement",
			"getElementsByTagName(${1:localName: DOMString})"
		],
		[
			"querySelector( selectors: DOMString ): Element (Selectors)\tElement",
			"querySelector(${1:selectors: DOMString})"
		],
		[
			"setAttribute( name: DOMString, value: DOMString ): void\tElement",
			"setAttribute(${1:name: DOMString}, ${2:value: DOMString})"
		],
		[
			"querySelectorAll( selectors: DOMString ): NodeList\tElement",
			"querySelectorAll(${1:selectors: DOMString})"
		],
		[
			"queryAll( relativeSelectors: DOMString ): Elements\tElement",
			"queryAll(${1:relativeSelectors: DOMString})"
		],
		[
			"query( relativeSelectors: DOMString ): Element\tElement",
			"query(${1:relativeSelectors: DOMString})"
		],
		[
			"pseudo( pseudoElt: DOMString ): PseudoElement\tElement",
			"pseudo(${1:pseudoElt: DOMString})"
		],
		[
			"getAttribute( name: DOMString ): DOMString\tElement",
			"getAttribute(${1:name: DOMString})"
		],
		[
			"prepend( nodes...: Node|DOMString ): void\tElement",
			"prepend(${1:nodes...: Node|DOMString})"
		],
		[
			"replace( nodes...: Node|DOMString ): void\tElement",
			"replace(${1:nodes...: Node|DOMString})"
		],
		[
			"removeAttribute( name: DOMString ): void\tElement",
			"removeAttribute(${1:name: DOMString})"
		],
		[
			"append( nodes...: Node|DOMString ): void\tElement",
			"append(${1:nodes...: Node|DOMString})"
		],
		[
			"before( nodes...: Node|DOMString ): void\tElement",
			"before(${1:nodes...: Node|DOMString})"
		],
		[
			"hasAttribute( name: DOMString ): boolean\tElement",
			"hasAttribute(${1:name: DOMString})"
		],
		[
			"matches( selectors: DOMString ): boolean\tElement",
			"matches(${1:selectors: DOMString})"
		],
		[
			"after( nodes...: Node|DOMString ): void\tElement",
			"after(${1:nodes...: Node|DOMString})"
		],
		[
			"childElementCount: unsigned long\tElement",
			"childElementCount"
		],
		[
			"previousElementSibling: Element\tElement",
			"previousElementSibling"
		],
		[
			"createShadowRoot(): ShadowRoot\tElement",
			"createShadowRoot()"
		],
		[
			"nextElementSibling: Element\tElement",
			"nextElementSibling"
		],
		[
			"firstElementChild: Element\tElement",
			"firstElementChild"
		],
		[
			"requestPointerLock(): void\tElement",
			"requestPointerLock()"
		],
		[
			"lastElementChild: Element\tElement",
			"lastElementChild"
		],
		[
			"requestFullscreen(): void\tElement",
			"requestFullscreen()"
		],
		[
			"children: HTMLCollection\tElement",
			"children"
		],
		[
			"namespaceURI: DOMString\tElement",
			"namespaceURI"
		],
		[
			"classList: DOMTokenList\tElement",
			"classList"
		],
		[
			"shadowRoot: ShadowRoot\tElement",
			"shadowRoot"
		],
		[
			"localName: DOMString\tElement",
			"localName"
		],
		[
			"className: DOMString\tElement",
			"className"
		],
		[
			"attributes: Attr[]\tElement",
			"attributes"
		],
		[
			"tagName: DOMString\tElement",
			"tagName"
		],
		[
			"pseudo: DOMString\tElement",
			"pseudo"
		],
		[
			"prefix: DOMString\tElement",
			"prefix"
		],
		[
			"remove(): void\tElement",
			"remove()"
		],
		[
			"id: DOMString\tElement",
			"id"
		]
	]
}